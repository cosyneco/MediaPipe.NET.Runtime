name: Deploy (Protobuf)
on:
  push:
    tags:
      - '*'

env:
  PROJECT_NAME: Mediapipe.Net.Framework.Protobuf
  PACKAGE_OUTDIR: ${{ github.workspace }}/out

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Cache Bazel directory
        uses: actions/cache@v2
        if: ${{ always() }}
        env:
          cache-name: bazel-cache
        with:
          path: ~/.cache/bazel
          key: Linux-${{ env.cache-name }}-dev

      - name: Cache build directory
        uses: actions/cache@v2
        env:
          cache-name: build-cache
        with:
          path: build
          key: Linux-${{ env.cache-name }}-dev

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Setup Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Build C# Protobuf sources (Linux, CPU)
        if: ${{ matrix.os.name == 'Linux_CPU' }}
        run: python build.py build --protobuf -vv

      - name: Restore packages
        run: dotnet restore ${{ env.PROJECT_NAME }}

      - name: Build project
        run: dotnet build ${{ env.PROJECT_NAME }} --no-restore --configuration Release

      - name: Pack project
        run: dotnet pack ${{ env.PROJECT_NAME }} --no-restore --no-build --configuration Release --output ${{ env.PACKAGE_OUTDIR }}

      - name: Upload Nuget package artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-nuget
          path: ${{ env.PACKAGE_OUTDIR }}/*.nupkg

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Nuget package artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-nuget
          path: ${{ github.workspace }}

      - name: Upload Build
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ github.workspace }}/*.nupkg
          name: MediaPipe.NET.Runtime ${{ github.event.release.tag_name }}
          tag: ${{ github.event.release.tag_name }}
          body: This is a test prerelease.
          generateReleaseNotes: true
          prerelease: true
